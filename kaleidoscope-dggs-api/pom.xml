<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>ai.terraframe.kaleidoscope</groupId>
    <artifactId>kaleidoscope-dggs</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  
  <artifactId>kaleidoscope-dggs-api</artifactId>
  <packaging>war</packaging>
  <name>Kaleidoscope AI DGGS API server</name>

  <description></description>
  <properties>
    <maven.compiler.source>22</maven.compiler.source>
    <maven.compiler.target>22</maven.compiler.target>
    <aws.version>2.29.6</aws.version>
    <spring.version>3.3.4</spring.version>
    <geotools.version>32.2</geotools.version>
  </properties>
  <dependencies>
	  <dependency>
		  <groupId>software.amazon.awssdk</groupId>
		  <artifactId>netty-nio-client</artifactId>
		  <version>2.29.6</version>
		  <exclusions>
		    <exclusion>
		      <groupId>org.slf4j</groupId>
		      <artifactId>slf4j-api</artifactId>
		    </exclusion>
		  </exclusions>
		</dependency>
	  
    <!--  Spring!  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- AWS -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>bedrockagentruntime</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>bedrock</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>bedrockruntime</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <!-- Jena Client-->
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-rdfconnection</artifactId>
      <version>5.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-geosparql</artifactId>
      <version>5.3.0</version>
    </dependency>
    <!--  https://mvnrepository.com/artifact/org.geotools/gt-geojson  -->
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-geojson</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.36</version>
      <scope>provided</scope>
    </dependency>
    <!-- DGGAL -->
    <dependency>
      <groupId>org.dggal</groupId>
      <artifactId>dggal</artifactId>
      <version>1.0.0</version>    
    </dependency>    
<!-- https://mvnrepository.com/artifact/org.wololo/jts2geojson -->
<!--
  
<dependency>
    <groupId>org.wololo</groupId>
    <artifactId>jts2geojson</artifactId>
    <version>0.18.1</version>
</dependency>    
-->
    <!-- Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>category</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.1.2</version>
            <configuration>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cargo-run</id>
      <activation>
        <property>
          <name>cargo-run</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.9.0</version>
            <configuration>
              <container>
                <containerId>tomcat11x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>11.0.5</version>
                </artifactInstaller>
                <timeout>4800000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>8080</cargo.servlet.port>
                  <cargo.protocol>http</cargo.protocol>
                  <cargo.tomcat.httpSecure>false</cargo.tomcat.httpSecure>
                  <cargo.tomcat.uriencoding>UTF-8</cargo.tomcat.uriencoding>
                  <cargo.jvmargs>
                    -Xmx5120M
                    -Xdebug
                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                    -Dtomcat.home=/${project.basedir}/target/cargo/configurations/tomcat11x
                  </cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>ai.terraframe</groupId>
                  <artifactId>ai-dggs-api</artifactId>
                  <type>war</type>
                  <properties>
                    <context>/</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>cargo-run</id>
                <phase>verify</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <scriptSourceDirectory>scripts</scriptSourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <directory>target</directory>
    <finalName>ai-dggs-api</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
        <configuration>
          <excludes>
            <exclude>**IntegrationTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <parameters>true</parameters>
        </configuration>
      </plugin>      
      <!--  Copy over the compiled react code    -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
              <resources>
                <resource>
                  <directory>
                    ${project.basedir}/../ai-dggs-ui/dist/ai-dggs/browser/</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
